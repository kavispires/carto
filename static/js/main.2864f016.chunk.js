(this.webpackJsonpcarto=this.webpackJsonpcarto||[]).push([[0],{19:function(e,a,t){e.exports=t.p+"static/media/carto-logo.de703539.svg"},54:function(e,a,t){e.exports=t(64)},59:function(e,a,t){},64:function(e,a,t){"use strict";t.r(a);var n=t(0),r=t.n(n),l=t(17),s=t.n(l);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));t(59);var i,o=t(5),c=t(13),u=t(97),d=t(40),m=t(12),h=t(38),p=t(39),f=function(e){var a=Object(m.a)(e);return a.sort((function(){return Math.random()-.5})),a},E=function(e){return e[Math.floor(Math.random()*e.length)]},g=[{id:22,letter:"A",index:0},{id:23,letter:"B",index:1},{id:24,letter:"C",index:2},{id:25,letter:"D",index:3}],v={EXPLORE_CARDS:{"05":{id:"05",name:"Temple Ruins",type:"ruin",duration:0},"06":{id:"06",name:"Outpost Ruins",type:"ruin",duration:0},"07":{id:"07",name:"Great River",type:"explore",duration:1},"08":{id:"08",name:"Farmland",type:"explore",duration:1},"09":{id:"09",name:"Hamlet",type:"explore",duration:1},10:{id:10,name:"Forgotten Forest",type:"explore",duration:1},11:{id:11,name:"Hinterland Stream",type:"explore",duration:2},12:{id:12,name:"Homestead",type:"explore",duration:2},13:{id:13,name:"Orchard",type:"explore",duration:2},14:{id:14,name:"Treetop Village",type:"explore",duration:2},15:{id:15,name:"Marshlands",type:"explore",duration:2},16:{id:16,name:"Fishing Village",type:"explore",duration:2},17:{id:17,name:"Rift Lands",type:"explore",duration:0}},AMBUSH_CARDS:{"01":{id:"01",name:"Goblin Attack",type:"ambush",duration:0,position:3},"02":{id:"02",name:"Bugbear Assault",type:"ambush",duration:0,position:2},"03":{id:"03",name:"Kobold Onslaught",type:"ambush",duration:0,position:4},"04":{id:"04",name:"Gnoll Raid",type:"ambush",duration:0,position:1}},SEASON_CARDS:{18:{id:18,name:"Spring",scores:[g[0],g[1]],duration:8},19:{id:19,name:"Summer",scores:[g[1],g[2]],duration:8},20:{id:20,name:"Fall",scores:[g[2],g[3]],duration:7},21:{id:21,name:"Winter",scores:[g[3],g[0]],duration:6}},GOAL_CARDS:{26:{id:26,name:"Sentinel Wood",type:"forests",effect:"1 point for each forest space adjacent to the edge of the map."},27:{id:27,name:"Greenbough",type:"forests",effect:"1 point per column or row with at least one forest space (both column and row score)."},28:{id:28,name:"Treetower",type:"forests",effect:"1 point per forest space with all four sides surrounded by filled spaces."},29:{id:29,name:"Sentinel Wood",type:"forests",effect:"3 points for each mountain connected by a cluster of forest spaces."},30:{id:30,name:"Canal Lake",type:"farmlands",effect:"1 point per water space adjacent to a farm space.\n 1 point per farm space adjacent to a water space."},31:{id:31,name:"Mages Valley",type:"farmlands",effect:"2 points per water space adjacent to a mountain.\n 1 point per farm space adjacent to a mountain."},32:{id:32,name:"The Golden Granary",type:"farmlands",effect:"1 point per water space adjacent to a ruin space.\n 3 points per farm space on a ruin space"},33:{id:33,name:"Shoreside Expanse",type:"farmlands",effect:"3 points per cluster of farm not adjacent to water spaces or the edge of the map.\n 3 points per cluster of water not adjacent to farm spaces or the edge of the map."},34:{id:34,name:"Wildholds",type:"villages",effect:"8 points per cluster of 6 or more village spaces."},35:{id:35,name:"Great City",type:"villages",effect:"1 point per village space in your largest village cluster that is not adjacent to mountain spaces."},36:{id:36,name:"Greengold Plains",type:"villages",effect:"3 points for each cluster of village spaces that is adjacent to three or more different terrain types."},37:{id:37,name:"Shieldgate",type:"villages",effect:"2 points per village space in your second largest village cluster."},38:{id:38,name:"Borderlands",type:"territory",effect:"6 points per each completely filled row or column."},39:{id:39,name:"Last Barony",type:"territory",effect:"3 points for each column in your largest square of filled spaces."},40:{id:40,name:"The Broken Road",type:"territory",effect:"3 points for each diagonal line of filled spaces that touches that left and bottom edges of the map."},41:{id:41,name:"The Cauldrons",type:"territory",effect:"1 point per empty space surrounded on all four sides by filled spaces or the edge of the map."}},EDICT_CARDS:g,SKILL_CARDS:{51:{id:51,name:"Acrobatics",cost:2,text:"During the Draw Phase, if an ambush card is revealed, the shape drawn on your map sheet is a 2x1 shape instead of the depicted shape."},52:{id:52,name:"Concentrate",cost:3,text:"During the Draw Phase, if an ambush card is revealed, draw the chosen shape a second time. Fill it with the same terrain type."},53:{id:53,name:"Cure Wounds",cost:1,text:"During the Draw Phase, draw an additional 2x1 shape adjacent to a monster space. Fill it with an available terrain type."},54:{id:54,name:"Diplomacy",cost:1,text:"At any time, draw a 1x1 square and fill it with both farm terrain and village terrain types"},55:{id:55,name:"Knowledge",cost:0,text:"During the Draw Phase, fill the chosen shape with village terrain instead of an available terrain type."},56:{id:56,name:"Move Silently",cost:0,text:"During the Draw Phase, draw the chosen shape so that it overhangs the edge of the map. Do not draw any portions that overhang."},57:{id:57,name:"Negotiate",cost:1,text:"During the Draw Phase, draw a 2x2 shape instead of one of the available shapes."},58:{id:58,name:"Search",cost:0,text:"During the Draw Phase, draw an additional 1x1 square adjacent to the drawn shape. Fill it with the same terrain type."}},PROMO_AMBUSH_CARDS:{pa01:{id:"pa01",name:"Flayer Incursion",type:"ambush",duration:0,position:2},pa02:{id:"pa02",name:"Insectoid Invasion",type:"ambush",duration:0,position:1},pa03:{id:"pa03",name:"Ratman Strike",type:"ambush",duration:0,position:3},pa04:{id:"pa04",name:"Ogre Charge",type:"ambush",duration:0,position:4}}},b="EXPLORE",y="GOALS",x="HOME",S="SCORING",C="SEASON",N="SETUP",w="GAME_OVER",k="RULES",O="#e09264",j={forests:[26,27],farmlands:[30,31],villages:[34,37],territory:[38,39]},A={forests:[26,27,28,29],farmlands:[30,31,32,33],villages:[34,35,36,37],territory:[38,39,40,41]},D="SEASON",R={farmlands:"farmlands",forests:"forest",territory:"territory",villages:"village"},_=new(function(){function e(){Object(h.a)(this,e),this.shuffledDeck=f(Object.values(v.EXPLORE_CARDS)),this.goals=[],this.deck=[],this.riftLands=null,this.monsters=null,this.activeMonsters=[],this.usedMonsters=[],this.skills=null,this.currentSeason=null,this.currentSeasonIndex=-1,this.phase=D,this.explorationIndex=0,this.currentDuration=0}return Object(p.a)(e,[{key:"setup",value:function(e){var a=e.mode,t=void 0===a?"normal":a,n=e.monsters,r=void 0===n||n,l=e.promoMonsters,s=void 0!==l&&l,i=e.extraRiftLands,o=void 0!==i&&i,c=e.skills,u=void 0!==c&&c;this.setupGoals(t);var d=r?Object.values(v.AMBUSH_CARDS):[],h=s?Object.values(v.PROMO_AMBUSH_CARDS):[];this.monsters=r||s?f([].concat(Object(m.a)(d),Object(m.a)(h))):null,this.riftLands=o?new Array(2).fill(v.EXPLORE_CARDS[17]):null,this.skills=u?function(e,a){for(var t=f(e),n=new Array(a).fill(null),r=0;r<n.length;r++){var l=t[r];n[r]=l}return n}(v.SKILL_CARDS,3):null,this.setupSeason()}},{key:"setupGoals",value:function(e){var a="simple"===e?j:A,t=v.GOAL_CARDS[E(a.forests)],n=v.GOAL_CARDS[E(a.farmlands)],r=v.GOAL_CARDS[E(a.villages)],l=v.GOAL_CARDS[E(a.territory)];this.goals=f([t,n,r,l])}},{key:"setupSeason",value:function(){this.currentSeasonIndex++,this.currentSeason=Object.values(v.SEASON_CARDS)[this.currentSeasonIndex],this.currentDuration=this.currentSeason.duration;var e=Object(m.a)(this.shuffledDeck);this.monsters&&(this.activeMonsters.push(this.monsters.pop()),e=[].concat(Object(m.a)(e),Object(m.a)(this.activeMonsters))),this.riftLands&&(e=[].concat(Object(m.a)(e),Object(m.a)(this.riftLands))),e=f(e);for(var a=[],t=0,n=0;t<this.currentSeason.duration;){var r=e[n];a.push(r),t+=r.duration,n++}this.deck=f(a);for(var l={1:!0,2:!0,3:!0,4:!0},s={5:!0,6:!0},i=!1;!i;){i=!0;for(var o=0;o<this.deck.length;o++){var c=this.deck[o];if(s[(this.deck[o-1]||{}).id]&&l[c.id]){i=!1;var u=[this.deck[o],this.deck[o-1]];this.deck[o-1]=u[0],this.deck[o]=u[1]}}}return this.explorationIndex="ruin"===this.deck[0].type?1:0,this.state}},{key:"startSeason",value:function(){return this.phase=b,this.currentDuration-=this.deck[this.explorationIndex].duration,this.state}},{key:"goToPreviousCard",value:function(){return this.explorationIndex--,this.currentDuration+=this.deck[this.explorationIndex].duration,"ruin"===this.currentCard.type?this.goToPreviousCard():("ambush"===this.currentCard.type&&this.activeMonsters.push(this.usedMonsters.pop()),this.state)}},{key:"goToNextCard",value:function(){var e=this;return this.currentDuration<=0?this.goToScore():("ambush"===this.currentCard.type&&(this.activeMonsters=this.activeMonsters.reduce((function(a,t){return t.id===e.currentCard.id?e.usedMonsters.push(t):a.push(t),a}),[])),this.explorationIndex++,this.currentDuration-=this.deck[this.explorationIndex].duration,"ruin"===this.currentCard.type?this.goToNextCard():this.state)}},{key:"goToScore",value:function(){return this.phase=S,this.state}},{key:"startNewSeason",value:function(){return this.currentSeasonIndex<3?(this.setupSeason(),this.startSeason()):this.phase=w,this.state}},{key:"reset",value:function(){return this.shuffledDeck=f(Object.values(v.EXPLORE_CARDS)),this.goals=[],this.deck=[],this.riftLands=null,this.monsters=null,this.activeMonsters=[],this.usedMonsters=[],this.skills=null,this.currentSeason=null,this.currentSeasonIndex=-1,this.phase=D,this.explorationIndex=0,this.currentDuration=0,this.state}},{key:"previousCard",get:function(){return this.deck[this.explorationIndex-1]}},{key:"currentCard",get:function(){return this.deck[this.explorationIndex]}},{key:"nextCard",get:function(){return this.deck[this.explorationIndex+1]}},{key:"isOnRuin",get:function(){var e;return"ruin"===(null===(e=this.previousCard)||void 0===e?void 0:e.type)}},{key:"isAmbush",get:function(){var e;return"ambush"===(null===(e=this.currentCard)||void 0===e?void 0:e.type)}},{key:"state",get:function(){return{goals:this.goals,deck:this.deck,skills:this.skills,currentSeason:this.currentSeason,phase:this.phase,previousCard:this.previousCard,currentCard:this.currentCard,nextCard:this.nextCard,currentDuration:this.currentDuration,isOnRuin:this.isOnRuin,isAmbush:this.isAmbush}}}]),e}()),G={game:_.state,screen:x,showGoals:!1},I=Object(d.createGlobalState)(G).useGlobalState,M=t(93),T=function(e){var a=e.id,t=e.className,n=e.prefix,l=void 0===n?"card_":n;return r.a.createElement("img",{className:t||"card",src:"".concat("/carto","/images/").concat(l).concat(a,".jpg"),alt:a})},L=function(e){var a=e.card,t=e.index,n=e.side,l=e.isActive;return r.a.createElement("div",{className:"explore-goal explore-goal--".concat(n," ").concat(l?"explore-goal--active":"")},r.a.createElement("div",{className:"icons"},r.a.createElement(T,{id:v.EDICT_CARDS[t].id,className:"card-mini"}),r.a.createElement(T,{id:R[a.type],className:"card-icon card-icon--selected",prefix:"icon-"})),r.a.createElement("span",{className:"effect"},a.effect))},P=t(92),B=t(43),q=t.n(B),W=t(42),F=t.n(W),H=t(47),U=t.n(H),X=t(44),K=t.n(X),V=t(46),J=t.n(V),$=t(45),z=t.n($),Q=function(e){var a,t,n,l=e.title,s=e.isMainButtonDisabled,i=void 0!==s&&s,c=I("game"),u=Object(o.a)(c,1)[0],d=I("screen"),m=Object(o.a)(d,2),h=m[0],p=m[1],f=I("showGoals"),E=Object(o.a)(f,2),g=E[0],v=E[1],x=h===k||h===y,S=(a=u.phase,t=u.isAmbush,n=u.isOnRuin,"EXPLORE"!==a?"":t?"header--ambush":n?"header--ruin":"");return r.a.createElement(P.a,{position:"static",className:"header ".concat(S)},r.a.createElement(M.a,{className:"header__btn",onClick:x?function(){p(u.phase)}:function(){p(y)},startIcon:x?r.a.createElement(F.a,null):r.a.createElement(q.a,null),disabled:i},x?"Resume":"Goals"),r.a.createElement(M.a,{className:"header__btn",onClick:function(){p(k)},startIcon:r.a.createElement(K.a,null)},"Rules"),r.a.createElement("h3",null,l),r.a.createElement(M.a,{className:"header__btn",onClick:function(){v((function(e){return!e}))},startIcon:g?r.a.createElement(z.a,null):r.a.createElement(J.a,null),disabled:h!==b},g?"Hide Goals":"Show Goals"),r.a.createElement(M.a,{className:"header__btn",onClick:function(){_.reset(),p(N)},startIcon:r.a.createElement(U.a,null)},"Reset"))},Y=function(e){var a=e.previousCard,t=e.onClick,n=(null===a||void 0===a?void 0:a.id)||"00";return r.a.createElement("div",{className:"explore-card explore-card--previous",onClick:t},r.a.createElement(T,{id:n,className:"card card--faded-left"}))},Z=function(e){var a=e.currentCard,t=e.previousCard;return r.a.createElement("div",{className:"explore-card explore-card--current"},"ruin"===(null===t||void 0===t?void 0:t.type)?r.a.createElement(T,{id:"ruin",className:"icon icon--ruin",prefix:"icon-"}):null,"ambush"===(null===a||void 0===a?void 0:a.type)?r.a.createElement(T,{id:"ambush-".concat(a.position),className:"icon icon--ambush",prefix:"icon-"}):null,r.a.createElement(T,{id:a.id}))},ee=function(e){e.nextCard;var a=e.onClick;return r.a.createElement("div",{className:"explore-card explore-card--next",onClick:a},r.a.createElement(T,{id:"00",className:"card card--faded-right"}))},ae=function(e,a){return e.scores.some((function(e){return e.letter===a}))},te=function(){var e=I("game"),a=Object(o.a)(e,2),t=a[0],n=a[1],l=I("screen"),s=Object(o.a)(l,2)[1],i=I("showGoals"),c=Object(o.a)(i,1)[0],u=function(){n(_.goToNextCard()),s(_.state.phase)},d=function(){n(_.goToPreviousCard()),s(_.state.phase)},m=t.currentSeason,h=t.currentDuration;return r.a.createElement("div",{className:"explore"},r.a.createElement(Q,{title:"Explore",isExploreDisabled:!0}),r.a.createElement("h1",{className:"title"},r.a.createElement(T,{id:"season",className:"card-icon card-icon--inline-title",prefix:"icon-"}),m.name),r.a.createElement("h2",{className:"subtitle"},"Time remaining: ",h>-1?h:0),r.a.createElement("div",{className:"explore-container"},c&&r.a.createElement("aside",{className:"explore-goals explore-goals--left"},r.a.createElement(L,{card:t.goals[0],index:0,side:"left",isActive:ae(m,"A")}),r.a.createElement(L,{card:t.goals[1],index:1,side:"left",isActive:ae(m,"B")})),r.a.createElement("section",{className:"explore__playarea ".concat(c?"explore__playarea--with-goals":"")},r.a.createElement(Y,{previousCard:t.previousCard,onClick:Boolean(t.previousCard)?d:null}),r.a.createElement(Z,{currentCard:t.currentCard,previousCard:t.previousCard}),r.a.createElement(ee,{nextCard:t.nextCard,onClick:u})),c&&r.a.createElement("aside",{className:"explore-goals explore-goals--right"},r.a.createElement(L,{card:t.goals[2],index:2,side:"right",isActive:ae(m,"C")}),r.a.createElement(L,{card:t.goals[3],index:3,side:"right",isActive:ae(m,"D")}))),r.a.createElement("div",{className:"goals__actions"},r.a.createElement(M.a,{variant:"outlined",className:"btn btn--outline",onClick:d,disabled:!Boolean(t.previousCard)},"Previous Card"),r.a.createElement(M.a,{variant:"outlined",className:"btn btn--outline",onClick:u},h>0?"Next Card":"Score")))},ne=t(19),re=t.n(ne),le=function(){var e=I("game"),a=Object(o.a)(e,2)[1],t=I("screen"),n=Object(o.a)(t,2)[1];return r.a.createElement("div",{className:"game-over"},r.a.createElement(Q,{title:"End Game",isGoalsDisabled:!0,isExploreDisabled:!0}),r.a.createElement("img",{className:"logo",src:re.a,alt:"Carto logo"}),r.a.createElement("p",null,"Tally your scores. The highest score wins!"),r.a.createElement("div",{className:"game-over__actions"},r.a.createElement(M.a,{variant:"outlined",className:"btn btn--outline",onClick:function(){a(_.reset()),n(N)}},"Start New Game")))},se=function(e){var a=e.card,t=e.index,n=e.isActive,l=void 0===n||n;return r.a.createElement("div",{className:"goal-card ".concat(l?"":"goal-card--inactive")},r.a.createElement("div",{className:"goal-card__types"},r.a.createElement(T,{id:v.EDICT_CARDS[t].id,className:"card-mini"}),r.a.createElement(T,{id:R[a.type],className:"card-icon card-icon--selected",prefix:"icon-"})),r.a.createElement("div",{className:"goal-card__main"},r.a.createElement(T,{id:a.id}),r.a.createElement("p",{className:"goal-card__effect"},a.effect)))},ie=function(){var e=I("game"),a=Object(o.a)(e,1)[0],t=I("screen"),n=Object(o.a)(t,2)[1];return r.a.createElement("div",{className:"goals"},r.a.createElement(Q,{title:"Goals",isGoalsDisabled:!0}),r.a.createElement("div",{className:"goals-list"},a.goals.map((function(e,a){return r.a.createElement(se,{key:e.id,card:e,index:a})}))),r.a.createElement("div",{className:"goals__actions"},r.a.createElement(M.a,{variant:"outlined",className:"btn btn--outline",onClick:function(){n(a.phase)}},"Resume Game")))},oe=function(){var e=I("screen"),a=Object(o.a)(e,2)[1];return r.a.createElement("div",{className:"home"},r.a.createElement("img",{className:"logo",src:re.a,alt:"Carto logo"}),r.a.createElement("h1",null,"Carto"),r.a.createElement("div",{className:"home__actions"},r.a.createElement(M.a,{variant:"outlined",className:"btn btn--outline",onClick:function(){a(N)}},"Create Game"),r.a.createElement(M.a,{variant:"outlined",className:"btn btn--outline",onClick:function(){},disabled:!0},"Resume Game")))},ce=t(104),ue=t(94),de=t(99),me=["Goal","Explore","Draw","Ruins","Ambush","Season Check","Scoring","End Game"],he=function(){return r.a.createElement("div",{className:"rule"},r.a.createElement("h2",null,"Goal of the Game"),r.a.createElement("p",null,"In this game, players are\xa0exploring the land as cartographers trying to make the best map by getting the\xa0most points over the course of 4 seasons."),r.a.createElement("div",{className:"rule-image"},r.a.createElement("img",{src:"".concat("/carto","/images/rule-goal-1.jpg"),alt:"rule goal"})),r.a.createElement("p",null,"Decide what side of the map sheet you will be playing with. All players must use the same side."),r.a.createElement("div",{className:"rule-image"},r.a.createElement("img",{src:"".concat("/carto","/images/rule-goal-2.jpg"),alt:"rule goal"})))},pe=function(){return r.a.createElement("div",{className:"rule"},r.a.createElement("h2",null,"Explore Phase"),r.a.createElement("p",null,"During the Explore phase, a card will be drawn indicating shapes and types of terrains you may find. The terrains are:"),r.a.createElement("div",{className:"rule-image"},r.a.createElement("img",{src:"".concat("/carto","/images/rule-explore-1.jpg"),alt:"rule explore"})),r.a.createElement("p",null,"If a card has two types of terrains, you must choose only one type to use."),r.a.createElement("div",{className:"rule-image rule-image--flat"},r.a.createElement("img",{src:"".concat("/carto","/images/rule-explore-2.jpg"),alt:"rule explore"})),r.a.createElement("p",null,"If a card has two different shapes, you must choose only one shape to use."),r.a.createElement("div",{className:"rule-image rule-image--flat"},r.a.createElement("img",{src:"".concat("/carto","/images/rule-explore-3.jpg"),alt:"rule explore"})),r.a.createElement("p",null,"If the shape you chose contains a coin, color one of the coins in the coin track."),r.a.createElement("div",{className:"rule-image rule-image--flat"},r.a.createElement("img",{src:"".concat("/carto","/images/rule-explore-4.jpg"),alt:"rule explore"})),r.a.createElement("div",{className:"rule-image"},r.a.createElement("img",{src:"".concat("/carto","/images/rule-explore-5.jpg"),alt:"rule explore"})))},fe=function(){return r.a.createElement("div",{className:"rule"},r.a.createElement("h2",null,"Draw Phase"),r.a.createElement("p",null,"Those are the rules for drawing:"),r.a.createElement("ul",null,r.a.createElement("li",null,"The shapes cannot overlap filled spaced or the edges of the map (mountains and wasteland are considered spaces).")),r.a.createElement("li",null,"Shapes can be rotated and/or mirrored."),r.a.createElement("li",null,"Shapes do not have to connect to a previously drawn shape."),r.a.createElement("li",null,"If each side of a mountain space is filled, fill in the next coin in the coin track."),r.a.createElement("h3",null,"1x1 Square Rule"),r.a.createElement("p",null,"If a shape cannot be legally drawn, you must instead draw a 1x1 square anywhere on their map and filled with an available terrain type."))},Ee=function(){return r.a.createElement("div",{className:"rule"},r.a.createElement("h2",null,"Ruins"),r.a.createElement("p",null,"When a card contains the Ruin icon, that shape MUST be drawn on top of a ruin."," ",r.a.createElement("b",null,"If you can not or do not have an available ruin space, you must follow the 1x1 square rule.")))},ge=function(){return r.a.createElement("div",{className:"rule"},r.a.createElement("h2",null,"Ambush"),r.a.createElement("p",null,"When an ambush card is revealed:"),r.a.createElement("h3",null,"If all players are in the same location"),r.a.createElement("p",null,"Give your map sheet to the player in the indicated direction on the card. They must draw the monster shape in your map,\xa0following all the drawing rules."," ",r.a.createElement("b",null,"If you can't draw the monster, follow the 1x1 square rule.")," Then return the map to its original player."),r.a.createElement("h3",null,"If playing solo or online"),r.a.createElement("p",null,"Use the icon in the top-right corner as reference. Starting from that corner, without rotating or mirroring the shape, see if you can draw the monster shape. If not, move in the direction of the arrows square by square until you can draw the shape.\xa0",r.a.createElement("b",null,"If you can't draw the monster, follow the 1x1 square rule.")))},ve=function(){return r.a.createElement("div",{className:"rule"},r.a.createElement("h2",null,"Using a Skill Card"),r.a.createElement("p",null,"TBD"))},be=function(){return r.a.createElement("div",{className:"rule"},r.a.createElement("h2",null,"Season Threshold Check"),r.a.createElement("p",null,"Each season has a time threshold and each explore card has a duration of 0-2 time units. The game will keep track of that\xa0threshold and the season will end when the total of Explore cards time units is equal or exceeds the season limit. Then to go scoring."))},ye=function(){return r.a.createElement("div",{className:"rule"},r.a.createElement("h2",null,"Scoring a Season"),r.a.createElement("p",null,"Each season will score two different goal cards."),r.a.createElement("p",null,"Calculate how many points you score in each active goal card."),r.a.createElement("p",null,"Add 1 point for each unused coin (if playing with Skills coins can be spent and won't count\xa0here)."),r.a.createElement("p",null,"Subtract 1 point for each side of monster squares that are not filled with other shapes (or the edge of the map or the wasteland)."),r.a.createElement("p",null,"Go to the next season or end the game if you're done with all 4 seasons."))},xe=function(){return r.a.createElement("div",{className:"rule"},r.a.createElement("h2",null,"End of the Game"),r.a.createElement("p",null,"Add the points for all 4 seasons. The winner is the player with the most points."),r.a.createElement("p",null,"In the case of a tie, the player who lost the least amount of points for monsters, win the game."))},Se={Goal:r.a.createElement(he,null),Explore:r.a.createElement(pe,null),Draw:r.a.createElement(fe,null),Ruins:r.a.createElement(Ee,null),Ambush:r.a.createElement(ge,null),Skills:r.a.createElement(ve,null),"Season Check":r.a.createElement(be,null),Scoring:r.a.createElement(ye,null),"End Game":r.a.createElement(xe,null)},Ce=function(){var e=Object(n.useState)(0),a=Object(o.a)(e,2),t=a[0],l=a[1],s=Se[me[t]];return r.a.createElement("div",{className:"rules"},r.a.createElement(Q,{title:"Rules"}),r.a.createElement(ce.a,{activeStep:t,alternativeLabel:!0},me.map((function(e){return r.a.createElement(ue.a,{key:e},r.a.createElement(de.a,null,e))}))),r.a.createElement("div",{className:"rule-container"},s),r.a.createElement("div",{className:"rule-action-buttons"},r.a.createElement(M.a,{variant:"outlined",className:"btn btn--outline-filled",disabled:0===t,onClick:function(){l((function(e){return e-1}))}},"Back"),r.a.createElement(M.a,{variant:"outlined",className:"btn btn--outline-filled",onClick:t===me.length-1?function(){l(0)}:function(){l((function(e){return e+1}))}},t===me.length-1?"Reset":"Next")))},Ne=function(){var e=I("game"),a=Object(o.a)(e,2),t=a[0],n=a[1],l=I("screen"),s=Object(o.a)(l,2)[1],i=t.currentSeason;return r.a.createElement("div",{className:"scoring"},r.a.createElement(Q,{title:"Score ".concat(i.name),isMainButtonDisabled:!0}),r.a.createElement("h1",{className:"title"},r.a.createElement(T,{id:"season",className:"card-icon card-icon--inline-title",prefix:"icon-"}),"Score for ",i.name),r.a.createElement("ul",{className:"score-items"},r.a.createElement("li",null,"Calculate your points for ",i.scores[0].letter,"."),r.a.createElement("li",null,"Calculate your points for ",i.scores[1].letter,"."),r.a.createElement("li",null,"Add 1 point for each unused coin you have."),r.a.createElement("li",null,"Subtract 1 point for each adjacent Monster square that is not filled.")),r.a.createElement("div",{className:"goals-list"},t.goals.map((function(e,a){var t=Boolean(i.scores.find((function(e){return e.index===a})));return r.a.createElement(se,{key:e.id,card:e,index:a,isActive:t})}))),r.a.createElement("div",{className:"goals__actions"},r.a.createElement(M.a,{variant:"outlined",className:"btn btn--outline",onClick:function(){n(_.startNewSeason()),s(_.state.phase)}},"Winter"!==i.name?"Start New Season":"End Game")))},we=function(){var e=I("game"),a=Object(o.a)(e,2),t=a[0],n=a[1],l=I("screen"),s=Object(o.a)(l,2)[1],i=t.currentSeason;return r.a.createElement("div",{className:"season"},r.a.createElement(Q,{title:"New Season",isMainButtonDisabled:!0}),r.a.createElement("h1",{className:"title"},r.a.createElement(T,{id:"season",className:"card-icon card-icon--inline-title",prefix:"icon-"}),i.name),r.a.createElement("h2",{className:"subtitle"},"Duration: ",i.duration," | Scoring:"," ",i.scores.map((function(e){return e.letter})).join(" & ")),r.a.createElement("div",{className:"goals-list"},t.goals.map((function(e,a){var t=Boolean(i.scores.find((function(e){return e.index===a})));return r.a.createElement(se,{key:e.id,card:e,index:a,isActive:t})}))),r.a.createElement("div",{className:"goals__actions"},r.a.createElement(M.a,{variant:"outlined",className:"btn btn--outline",onClick:function(){_.startSeason(),n(_.state),s(_.state.phase)}},"Start Season")))},ke=t(95),Oe=t(96),je=t(100),Ae=t(98),De=t(103),Re=t(101),_e=t(102),Ge=function(){var e=I("game"),a=Object(o.a)(e,2)[1],t=I("screen"),l=Object(o.a)(t,2)[1],s=Object(n.useState)(!0),i=Object(o.a)(s,2),c=i[0],u=i[1],d=Object(n.useState)(!1),m=Object(o.a)(d,2),h=m[0],p=m[1],f=Object(n.useState)(!1),E=Object(o.a)(f,2),g=E[0],v=E[1],b=Object(n.useState)(!1),x=Object(o.a)(b,2),S=x[0],C=x[1],N=Object(n.useState)("normal"),w=Object(o.a)(N,2),k=w[0],j=w[1];return r.a.createElement("div",{className:"setup"},r.a.createElement("img",{className:"logo-small",src:re.a,alt:"Carto logo"}),r.a.createElement("h1",null,"Setup"),r.a.createElement(ke.a,null,r.a.createElement(Re.a,{component:"fieldset"},r.a.createElement(_e.a,{component:"legend",style:{color:O}},"Mode"),r.a.createElement(De.a,{"aria-label":"mode",name:"mode",value:k,onChange:function(e){return j(e.target.value)}},r.a.createElement(Oe.a,{value:"simple",control:r.a.createElement(Ae.a,null),label:"Simple Goals"}),r.a.createElement(Oe.a,{value:"normal",control:r.a.createElement(Ae.a,null),label:"Normal"}))),r.a.createElement(Re.a,{component:"fieldset"},r.a.createElement(_e.a,{component:"legend",style:{color:O}},"Options"),r.a.createElement(Oe.a,{control:r.a.createElement(je.a,{checked:c,onChange:function(){return u((function(e){return!e}))},name:"add-monsters"}),label:"Add Monsters"}),r.a.createElement(Oe.a,{control:r.a.createElement(je.a,{checked:h,onChange:function(){return p((function(e){return!e}))},name:"add-promo-monsters"}),label:"Add Extra Promo Monsters"}),r.a.createElement(Oe.a,{control:r.a.createElement(je.a,{checked:S,onChange:function(){return C((function(e){return!e}))},name:"add-kills",disabled:!0}),label:"Add Skills"}),r.a.createElement(Oe.a,{control:r.a.createElement(je.a,{checked:g,onChange:function(){return v((function(e){return!e}))},name:"add-rift-lands"}),label:"Add Aditional Rift Lands"}))),r.a.createElement("div",{className:"setup__actions"},r.a.createElement(M.a,{variant:"outlined",className:"btn--outline",onClick:function(){_.setup({mode:k,monsters:c,promoMonsters:h,extraRiftLands:g,skills:S}),a(_.state),l(y)}},"Start Game")))},Ie=(i={},Object(c.a)(i,b,r.a.createElement(te,null)),Object(c.a)(i,w,r.a.createElement(le,null)),Object(c.a)(i,y,r.a.createElement(ie,null)),Object(c.a)(i,x,r.a.createElement(oe,null)),Object(c.a)(i,k,r.a.createElement(Ce,null)),Object(c.a)(i,S,r.a.createElement(Ne,null)),Object(c.a)(i,C,r.a.createElement(we,null)),Object(c.a)(i,N,r.a.createElement(Ge,null)),i),Me=function(){var e=I("game"),a=Object(o.a)(e,1)[0],t=I("screen"),n=Object(o.a)(t,1)[0];console.log(a);var l,s,i,c=(l=a.phase,s=a.isAmbush,i=a.isOnRuin,"EXPLORE"!==l?"":s?"bg-ambush":i?"bg-ruin":"");return r.a.createElement(u.a,{maxWidth:"lg",className:"app-container ".concat(c)},Ie[n])};s.a.render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(Me,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))}},[[54,1,2]]]);
//# sourceMappingURL=main.2864f016.chunk.js.map